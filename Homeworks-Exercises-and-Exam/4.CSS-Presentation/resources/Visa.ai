%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 12.0.0%%For: (Petrovich) (Petrovich & Sons)%%Title: (_Visa_Logo_NEW.ai)%%CreationDate: 17/3/08 6:03 PM%%BoundingBox: 394 279 448 315%%HiResBoundingBox: 394.7148 279.1416 447.2832 314.0527%%DocumentProcessColors: Cyan Magenta Yellow Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%CMYKCustomColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 421.5 297.7754 421.5 297.7754%AI3_TileBox: 14.105 14.5576 828.1846 581.9175%AI3_DocumentPreview: None%AI5_ArtSize: 841.8898 595.2756%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: 326.2891 356.4673 6.5719 1586 1093 26 0 0 7 73 0 0%AI5_OpenViewLayers: 7%%PageOrigin:0 0%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 88 8%%BeginData: 7028 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFD83FFA9FFA9FD39FFCF9FC8A6C9A6C9A6C9%A6C9A6C9A6C9A7FD0EFF7E537E537E537E535AA8FFFFA9537E537E537E53%5AA8FD0BFF7E5A2F2F072F072F072F537E84FD0DFFA87E537E537E537E53%7EFD1DFFCFC8FD0FC0CFFD0CFF072F072F072F072F07FFFFFF7E2F072F07%2F072F07A9FD08FFA95A072F072F072F072F072F072F072F53FD0BFF842F%072F072F072F072F2FFD20FFCAC99FC09EC09EC09EC09EC09EC09EFD0BFF%7E07070D070D070D075AFFFFFF5A060D070D070D070DA8FD07FF530D0707%070D070D070D070D070D070D0654FD0AFFA80D070D070D070D070D070DA8%FD22FFC9C89EC0C0C09EC6C0C09EC0C9FD0AFF54070D070D070D072FA8FF%FFFF532F070D070D072F2FFD07FF2F2F072F070D070D070D070D070D070D%072F5AFD0AFF7E072F070D070D070D072F07A9FD24FFCA9FC09EC09EC09E%C09EC9FD09FFA9060D0707060D07072FFFFFFFA82F0707060D07070654FD%06FF29290707060D0707060D0707060D0707060D077EFD0AFF0707060D07%07060D0707062953FD25FF8552C0C0C6C0C6C0C6C8FD09FF542F070D072F%070D07A9FD04FF072F072F070D072F5AFD05FF532F070D072F070D072F07%2F072F072F072F070DA8FD09FF7E2F072F070D072F070D072F075AFD25FF%A80D289F9EC09EC09EC7FD08FFAF2F070D070D070D072FA9FFFFFF7E0D07%0D070D070D0684FD04FF7E07070D070D070D0707062F2F532F542907062F%07FD0AFF2F070D070D070D070D070D070D07FD26FF2F2F07A09EC6C0C09E%FD08FFA9070D070D070D072F5AFD04FF84072F070D070D070D84FD04FF5A%070D070D070D072F2FA9A9FD05FFA87E2F54FD09FFA9072F070D070D070D%070D070D072FA9FD25FF5A060D07769EC09EC0A7FD07FF2F070707060D07%0706A9FD04FF5307060D0707060D07FD05FF070D0707060D070707FD0BFF%A8FD09FF2F07060D0707060D0707060D0707067EFD25FF7E2F070D077DC0%C69ECEFD06FFA92F070D072F070D075AFD05FF5A072F070D072F0754FD04%FFA82F070D072F070D075AFD14FFA92F072F070D072F0D2F072F070D072F%5AFD25FFAF070D070D077C9EC09FFD06FF7E060D070D070D07077EFD05FF%2907070D070D072F53FD04FFA8070D070D070D070707A9FD13FF5A070D07%0D070D077E070D070D070D0754FD26FF54070D070D07A0C0C7FD06FF2F2F%070D070D072F2FFD05FFA92F070D070D070D077EFD04FFA80D070D070D07%0D072F07A9FD12FF072F070D070D0754FF30070D070D070D07FD26FF5A07%060D0707069F9ECFFD04FF7E0D0707060D0707067EFD05FFA8060D070706%0D07077EFD05FF0707060D0707060D07070654A8FD0FFF5A07060D070706%295AFF2F0D0707060D07077EFD25FFA9072F070D072F53C0C9FD04FF7E07%0D072F070D072FFD06FF7E2F070D072F070D07A9FD05FF7E072F070D072F%070D072F070D53A9FD0DFF2F072F070D072F07FFFF7E070D072F070D077E%FD25FFA92F070D070D070D75C8FD04FF070D070D070D070753FD06FF5A06%0D070D070D070DA8FD05FFA80D060D070D070D070D070D0707075AA9FD0A%FFA8070D070D070D0654FFFF7E0D070D070D070753FD26FF532F070D070D%072FC8FFFFFF7E2F070D070D072F07A9FD06FF532F070D070D072F2FFD07%FFA80D072F070D070D070D070D070D072FA8FD09FF2F2F070D070D072F7E%FFFFFF072F070D070D072FFD26FF7E0707060D0707067DCFFFFF53070706%0D07070654FD06FFA82F0707060D07070654FD08FF7E0D060D0707060D07%07060D0707060D7EFD07FFA807060D0707060D07FD04FF2F060D0707060D%07A9FD25FFA90D072F070D072F2FFFFFAF070D072F070D072F7EFD07FF07%2F072F070D072F5AFD09FFA95A072F072F070D072F070D072F072FA8FD06%FF5A072F070D072F077EFD04FF532F070D072F072F7EFD26FF2F07070D07%0D072F7EFF532F070D070D070729FD07FF7E0D070D070D070D067EFD0BFF%842F07070D070D070D070D070D072FFD06FF0707070D070D070DA8FD04FF%7E060D070D070D077EFD26FF7E070D070D070D077EFF2F070D070D070D07%7EFD07FF7E072F070D070D070DA8FD0DFF7E2F072F070D070D070D072F07%A9FD04FF5A2F070D070D072F2FFD05FFA80D070D070D072F53FD26FF7E0D%0707060D070753A80707060D0707060DA8FD07FF5307060D0707060D07FD%10FF7E060D0707060D0707062953FFFFFFAF2F060D0707060D077EFD06FF%0707060D0707062FA9FD26FF072F072F070D0754532F072F070D072F54FD%08FF5A072F070D072F0754FD11FFA9072F072F070D072F077EFFFFFFA907%2F070D072F070D2F542F2F2F302F2F072F070D072F07A9FD26FF54070D07%0D070D070D070D070D070D07A9FD08FF2907070D070D072F53FD12FF7E07%0D070D070D072F53FFFFFF2F07070D070D070D0707070D0707070D070D07%0D070D072F7EFD26FF5A2F070D070D070D070D070D070D0754FD08FFA92F%070D070D070D077EFD12FF7E2F070D070D070D077EFFFFA82F070D070D07%0D070D070D070D070D070D070D070D070D077EFD26FFA8060D0707060D07%07060D070706077EFD08FFA8060D0707060D07077EFD04FF7E53A9FD0AFF%AF2F060D0707060D07077EFFFF54060D0707060D0707060D0707060D0707%060D0707060D070729FD27FF30070D072F070D072F070D072F2FFD09FF7E%2F070D072F070D07A9FD04FF2F2F075A7EAFAFFD05FF8454072F070D072F%072F07FFFFFF072F070D072F070D072F070D072F070D072F070D072F070D%072FA9FD26FF532F070D070D070D070D070D067EFD09FF5A060D070D070D%070DA8FFFFFFA92F0707062F072F29542F2F072F070D070D070D070D075A%FFFF5407070D070D070D0707062F0707062F0707060D070D070D070D07A9%FD26FF7E072F070D070D070D070D070DA8FD09FF532F070D070D072F2FFD%05FF072F070D072F072F072F070D070D070D070D070D072FFFFFFF2F070D%070D070D072F5354535A5354535A535A2F2F070D070D072F5AFD26FFA807%060D0707060D070706072FFD09FFA82F0707060D07070654FD04FF7E0706%0D0707060D0707060D0707060D0707060D07077EFFFF7E060D0707060D07%0759FD0AFF84060D0707060D0754FD27FF2F2F070D072F070D072F07A9FD%0AFF072F072F070D072F5AFD04FF7E072F070D072F070D072F070D072F07%0D072F072F84FFFFFF2F2F070D072F072F07FD0BFFA92F070D072F072F2F%FD27FF5A060D070D070D070D072FFD0AFF7E0D070D070D070D0684FD04FF%5329070D070D070D070D070D070D070D07070654A8FFFFFF8407070D070D%070D0754FD0CFF290D070D070D070DA8FD26FF7E2F072F072F072F07297E%FD0AFF7E072F072F072F072FA8FD04FFA92F2F072F072F072F070D072F07%2F072F53A9FD05FF54072F072F072F072F7EFD0CFF5A072F072F072F077E%FD27FF5A7E597E5A7E597E5AFD0BFF7E54535A535A535A53FD07FFA88453%542F2F072F292F29545384A8FD07FF535A535A535A535A53FD0DFF7E5453%5A535A535A7EFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFF%FDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFDFCFFFD42FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Unnamed Pattern 7)(Unnamed Pattern 7) 13.0498 13.0508 91.3486 91.3496 [%AI3_Tile(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.1006 78.2988 mF%AI6_EndPatternLayer) &(0 O 0 R 0.129412 0.215686 0.552941 0.023529 k 0.129412 0.215686 0.552941 0.023529 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.1006 65.25 m26.1006 72.457 31.9424 78.2988 39.1494 78.2988 C31.9424 78.2988 26.1006 84.1406 26.1006 91.3496 C26.1006 84.1406 20.2559 78.2988 13.0498 78.2988 C20.2559 78.2988 26.1006 72.457 26.1006 65.25 Cf13.0498 91.3496 mF%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.490196 0.839216 0.003922 k 0.047059 0.490196 0.839216 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 78.2988 m13.0498 85.5059 18.8926 91.3496 26.1006 91.3496 C18.8926 91.3496 13.0498 97.1914 13.0498 104.4004 C13.0498 97.1914 7.208 91.3496 0 91.3496 C7.208 91.3496 13.0498 85.5059 13.0498 78.2988 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR52.1982 78.2988 mF%AI6_EndPatternLayer) &(0 O 0 R 0.054902 0.266667 0.615686 0.007843 k 0.054902 0.266667 0.615686 0.007843 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR52.1982 65.25 m52.1982 72.457 58.04 78.2988 65.249 78.2988 C58.04 78.2988 52.1982 84.1406 52.1982 91.3496 C52.1982 84.1406 46.3564 78.2988 39.1494 78.2988 C46.3564 78.2988 52.1982 72.457 52.1982 65.25 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 91.3496 mF%AI6_EndPatternLayer) &(0 O 0 R 0.054902 0.388235 0.709804 0.003922 k 0.054902 0.388235 0.709804 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 78.2988 m39.1494 85.5059 44.9912 91.3496 52.1982 91.3496 C44.9912 91.3496 39.1494 97.1914 39.1494 104.4004 C39.1494 97.1914 33.3066 91.3496 26.1006 91.3496 C33.3066 91.3496 39.1494 85.5059 39.1494 78.2988 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR78.2988 78.2988 mF%AI6_EndPatternLayer) &(0 O 0 R 0.156863 0.364706 0.87451 0.039216 k 0.156863 0.364706 0.87451 0.039216 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR78.2988 65.25 m78.2988 72.457 84.1406 78.2988 91.3486 78.2988 C84.1406 78.2988 78.2988 84.1406 78.2988 91.3496 C78.2988 84.1406 72.4561 78.2988 65.249 78.2988 C72.4561 78.2988 78.2988 72.457 78.2988 65.25 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 91.3496 mF%AI6_EndPatternLayer) &(0 O 0 R 0.054902 0.388235 0.709804 0.003922 k 0.054902 0.388235 0.709804 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 78.2988 m65.249 85.5059 71.0898 91.3496 78.2988 91.3496 C71.0898 91.3496 65.249 97.1914 65.249 104.4004 C65.249 97.1914 59.4063 91.3496 52.1982 91.3496 C59.4063 91.3496 65.249 85.5059 65.249 78.2988 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.3486 91.3496 mF%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.490196 0.839216 0.003922 k 0.047059 0.490196 0.839216 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.3486 78.2988 m91.3486 85.5059 97.1904 91.3496 104.3984 91.3496 C97.1904 91.3496 91.3486 97.1914 91.3486 104.4004 C91.3486 97.1914 85.5059 91.3496 78.2988 91.3496 C85.5059 91.3496 91.3486 85.5059 91.3486 78.2988 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.1006 52.1992 mF26.1006 39.1504 m26.1006 46.3574 31.9424 52.1992 39.1494 52.1992 C31.9424 52.1992 26.1006 58.041 26.1006 65.25 C26.1006 58.041 20.2559 52.1992 13.0498 52.1992 C20.2559 52.1992 26.1006 46.3574 26.1006 39.1504 Cf13.0498 65.25 mF%AI6_EndPatternLayer) &(0 O 0 R 0.054902 0.388235 0.709804 0.003922 k 0.054902 0.388235 0.709804 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 52.1992 m13.0498 59.4063 18.8926 65.25 26.1006 65.25 C18.8926 65.25 13.0498 71.0918 13.0498 78.2988 C13.0498 71.0918 7.208 65.25 0 65.25 C7.208 65.25 13.0498 59.4063 13.0498 52.1992 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR52.1982 52.1992 mF%AI6_EndPatternLayer) &(0 O 0 R 0.031373 0.341176 0.603922 0.003922 k 0.031373 0.341176 0.603922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR52.1982 39.1504 m52.1982 46.3574 58.04 52.1992 65.249 52.1992 C58.04 52.1992 52.1982 58.041 52.1982 65.25 C52.1982 58.041 46.3564 52.1992 39.1494 52.1992 C46.3564 52.1992 52.1982 46.3574 52.1982 39.1504 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 65.25 mF%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.282353 0.933333 0.003922 k 0.047059 0.282353 0.933333 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 52.1992 m39.1494 59.4063 44.9912 65.25 52.1982 65.25 C44.9912 65.25 39.1494 71.0918 39.1494 78.2988 C39.1494 71.0918 33.3066 65.25 26.1006 65.25 C33.3066 65.25 39.1494 59.4063 39.1494 52.1992 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR78.2988 52.1992 mF%AI6_EndPatternLayer) &(0 O 0 R 0.168627 0.490196 0.94902 0.043137 k 0.168627 0.490196 0.94902 0.043137 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR78.2988 39.1504 m78.2988 46.3574 84.1406 52.1992 91.3486 52.1992 C84.1406 52.1992 78.2988 58.041 78.2988 65.25 C78.2988 58.041 72.4561 52.1992 65.249 52.1992 C72.4561 52.1992 78.2988 46.3574 78.2988 39.1504 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 65.25 mF%AI6_EndPatternLayer) &(0 O 0 R 0.086275 0.345098 0.831372 0.011765 k 0.086275 0.345098 0.831372 0.011765 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 52.1992 m65.249 59.4063 71.0898 65.25 78.2988 65.25 C71.0898 65.25 65.249 71.0918 65.249 78.2988 C65.249 71.0918 59.4063 65.25 52.1982 65.25 C59.4063 65.25 65.249 59.4063 65.249 52.1992 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.3486 65.25 mF%AI6_EndPatternLayer) &(0 O 0 R 0.054902 0.388235 0.709804 0.003922 k 0.054902 0.388235 0.709804 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.3486 52.1992 m91.3486 59.4063 97.1904 65.25 104.3984 65.25 C97.1904 65.25 91.3486 71.0918 91.3486 78.2988 C91.3486 71.0918 85.5059 65.25 78.2988 65.25 C85.5059 65.25 91.3486 59.4063 91.3486 52.1992 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.1006 26.0996 mF%AI6_EndPatternLayer) &(0 O 0 R 0.086275 0.345098 0.831372 0.011765 k 0.086275 0.345098 0.831372 0.011765 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.1006 13.0508 m26.1006 20.2559 31.9424 26.0996 39.1494 26.0996 C31.9424 26.0996 26.1006 31.9434 26.1006 39.1504 C26.1006 31.9434 20.2559 26.0996 13.0498 26.0996 C20.2559 26.0996 26.1006 20.2559 26.1006 13.0508 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 39.1504 mF%AI6_EndPatternLayer) &(0 O 0 R 0.054902 0.388235 0.709804 0.003922 k 0.054902 0.388235 0.709804 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 26.0996 m13.0498 33.3066 18.8926 39.1504 26.1006 39.1504 C18.8926 39.1504 13.0498 44.9922 13.0498 52.1992 C13.0498 44.9922 7.208 39.1504 0 39.1504 C7.208 39.1504 13.0498 33.3066 13.0498 26.0996 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR52.1982 26.0996 mF%AI6_EndPatternLayer) &(0 O 0 R 0.070588 0.207843 0.521569 0.007843 k 0.070588 0.207843 0.521569 0.007843 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR52.1982 13.0508 m52.1982 20.2559 58.04 26.0996 65.249 26.0996 C58.04 26.0996 52.1982 31.9434 52.1982 39.1504 C52.1982 31.9434 46.3564 26.0996 39.1494 26.0996 C46.3564 26.0996 52.1982 20.2559 52.1982 13.0508 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 39.1504 mF%AI6_EndPatternLayer) &(0 O 0 R 0.156863 0.364706 0.87451 0.039216 k 0.156863 0.364706 0.87451 0.039216 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 26.0996 m39.1494 33.3066 44.9912 39.1504 52.1982 39.1504 C44.9912 39.1504 39.1494 44.9922 39.1494 52.1992 C39.1494 44.9922 33.3066 39.1504 26.1006 39.1504 C33.3066 39.1504 39.1494 33.3066 39.1494 26.0996 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR78.2988 26.0996 mF%AI6_EndPatternLayer) &(0 O 0 R 0.086275 0.345098 0.705882 0.011765 k 0.086275 0.345098 0.705882 0.011765 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR78.2988 13.0508 m78.2988 20.2559 84.1406 26.0996 91.3486 26.0996 C84.1406 26.0996 78.2988 31.9434 78.2988 39.1504 C78.2988 31.9434 72.4561 26.0996 65.249 26.0996 C72.4561 26.0996 78.2988 20.2559 78.2988 13.0508 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 39.1504 mF%AI6_EndPatternLayer) &(0 O 0 R 0.090196 0.396078 0.87451 0.011765 k 0.090196 0.396078 0.87451 0.011765 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 26.0996 m65.249 33.3066 71.0898 39.1504 78.2988 39.1504 C71.0898 39.1504 65.249 44.9922 65.249 52.1992 C65.249 44.9922 59.4063 39.1504 52.1982 39.1504 C59.4063 39.1504 65.249 33.3066 65.249 26.0996 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.3486 39.1504 mF%AI6_EndPatternLayer) &(0 O 0 R 0.054902 0.388235 0.709804 0.003922 k 0.054902 0.388235 0.709804 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.3486 26.0996 m91.3486 33.3066 97.1904 39.1504 104.3984 39.1504 C97.1904 39.1504 91.3486 44.9922 91.3486 52.1992 C91.3486 44.9922 85.5059 39.1504 78.2988 39.1504 C85.5059 39.1504 91.3486 33.3066 91.3486 26.0996 Cf13.0498 13.0508 mN%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.490196 0.839216 0.003922 k 0.047059 0.490196 0.839216 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 0 m13.0498 7.209 18.8926 13.0508 26.1006 13.0508 C18.8926 13.0508 13.0498 18.8926 13.0498 26.0996 C13.0498 18.8926 7.208 13.0508 0 13.0508 C7.208 13.0508 13.0498 7.209 13.0498 0 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 13.0508 mF%AI6_EndPatternLayer) &(0 O 0 R 0.054902 0.388235 0.709804 0.003922 k 0.054902 0.388235 0.709804 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 0 m39.1494 7.209 44.9912 13.0508 52.1982 13.0508 C44.9912 13.0508 39.1494 18.8926 39.1494 26.0996 C39.1494 18.8926 33.3066 13.0508 26.1006 13.0508 C33.3066 13.0508 39.1494 7.209 39.1494 0 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 13.0508 mF%AI6_EndPatternLayer) &(0 O 0 R 0.054902 0.388235 0.709804 0.003922 k 0.054902 0.388235 0.709804 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 0 m65.249 7.209 71.0898 13.0508 78.2988 13.0508 C71.0898 13.0508 65.249 18.8926 65.249 26.0996 C65.249 18.8926 59.4063 13.0508 52.1982 13.0508 C59.4063 13.0508 65.249 7.209 65.249 0 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.384314 0.803922 0.003922 k 0.05098 0.384314 0.803922 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.3486 13.0508 mF%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.490196 0.839216 0.003922 k 0.047059 0.490196 0.839216 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.3486 0 m91.3486 7.209 97.1904 13.0508 104.3984 13.0508 C97.1904 13.0508 91.3486 18.8926 91.3486 26.0996 C91.3486 18.8926 85.5059 13.0508 78.2988 13.0508 C85.5059 13.0508 91.3486 7.209 91.3486 0 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR26.1006 65.25 m26.1006 72.457 31.9424 78.2988 39.1494 78.2988 C39.1494 71.0918 33.3066 65.25 26.1006 65.25 Cf13.0498 78.2988 m20.2559 78.2988 26.1006 72.457 26.1006 65.25 C18.8926 65.25 13.0498 71.0918 13.0498 78.2988 Cf39.1494 78.2988 m31.9424 78.2988 26.1006 84.1406 26.1006 91.3496 C33.3066 91.3496 39.1494 85.5059 39.1494 78.2988 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.172549 0.521569 0.003922 k 0.047059 0.172549 0.521569 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 78.2988 m20.2559 78.2988 26.1006 84.1406 26.1006 91.3496 C18.8926 91.3496 13.0498 85.5059 13.0498 78.2988 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR52.1982 65.25 m52.1982 72.457 58.04 78.2988 65.249 78.2988 C65.249 71.0918 59.4063 65.25 52.1982 65.25 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.12549 0.501961 0 k 0.05098 0.12549 0.501961 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 78.2988 m46.3564 78.2988 52.1982 72.457 52.1982 65.25 C44.9912 65.25 39.1494 71.0918 39.1494 78.2988 Cf65.249 78.2988 m58.04 78.2988 52.1982 84.1406 52.1982 91.3496 C59.4063 91.3496 65.249 85.5059 65.249 78.2988 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 78.2988 m46.3564 78.2988 52.1982 84.1406 52.1982 91.3496 C44.9912 91.3496 39.1494 85.5059 39.1494 78.2988 Cf78.2988 65.25 m78.2988 72.457 84.1406 78.2988 91.3486 78.2988 C91.3486 71.0918 85.5059 65.25 78.2988 65.25 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.172549 0.521569 0.003922 k 0.047059 0.172549 0.521569 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 78.2988 m72.4561 78.2988 78.2988 72.457 78.2988 65.25 C71.0898 65.25 65.249 71.0918 65.249 78.2988 Cf91.3486 78.2988 m84.1406 78.2988 78.2988 84.1406 78.2988 91.3496 C85.5059 91.3496 91.3486 85.5059 91.3486 78.2988 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 78.2988 m72.4561 78.2988 78.2988 84.1406 78.2988 91.3496 C71.0898 91.3496 65.249 85.5059 65.249 78.2988 Cf26.1006 39.1504 m26.1006 46.3574 31.9424 52.1992 39.1494 52.1992 C39.1494 44.9922 33.3066 39.1504 26.1006 39.1504 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.12549 0.501961 0 k 0.05098 0.12549 0.501961 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 52.1992 m20.2559 52.1992 26.1006 46.3574 26.1006 39.1504 C18.8926 39.1504 13.0498 44.9922 13.0498 52.1992 Cf39.1494 52.1992 m31.9424 52.1992 26.1006 58.041 26.1006 65.25 C33.3066 65.25 39.1494 59.4063 39.1494 52.1992 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 52.1992 m20.2559 52.1992 26.1006 58.041 26.1006 65.25 C18.8926 65.25 13.0498 59.4063 13.0498 52.1992 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.172549 0.521569 0.003922 k 0.047059 0.172549 0.521569 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR52.1982 39.1504 m52.1982 46.3574 58.04 52.1992 65.249 52.1992 C65.249 44.9922 59.4063 39.1504 52.1982 39.1504 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 52.1992 m46.3564 52.1992 52.1982 46.3574 52.1982 39.1504 C44.9912 39.1504 39.1494 44.9922 39.1494 52.1992 Cf65.249 52.1992 m58.04 52.1992 52.1982 58.041 52.1982 65.25 C59.4063 65.25 65.249 59.4063 65.249 52.1992 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.172549 0.521569 0.003922 k 0.047059 0.172549 0.521569 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 52.1992 m46.3564 52.1992 52.1982 58.041 52.1982 65.25 C44.9912 65.25 39.1494 59.4063 39.1494 52.1992 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR78.2988 39.1504 m78.2988 46.3574 84.1406 52.1992 91.3486 52.1992 C91.3486 44.9922 85.5059 39.1504 78.2988 39.1504 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.12549 0.501961 0 k 0.05098 0.12549 0.501961 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 52.1992 m72.4561 52.1992 78.2988 46.3574 78.2988 39.1504 C71.0898 39.1504 65.249 44.9922 65.249 52.1992 Cf91.3486 52.1992 m84.1406 52.1992 78.2988 58.041 78.2988 65.25 C85.5059 65.25 91.3486 59.4063 91.3486 52.1992 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR65.249 52.1992 m72.4561 52.1992 78.2988 58.041 78.2988 65.25 C71.0898 65.25 65.249 59.4063 65.249 52.1992 Cf26.1006 13.0508 m26.1006 20.2559 31.9424 26.0996 39.1494 26.0996 C39.1494 18.8926 33.3066 13.0508 26.1006 13.0508 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.172549 0.521569 0.003922 k 0.047059 0.172549 0.521569 0.003922 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 26.0996 m20.2559 26.0996 26.1006 20.2559 26.1006 13.0508 C18.8926 13.0508 13.0498 18.8926 13.0498 26.0996 Cf39.1494 26.0996 m31.9424 26.0996 26.1006 31.9434 26.1006 39.1504 C33.3066 39.1504 39.1494 33.3066 39.1494 26.0996 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.0498 26.0996 m20.2559 26.0996 26.1006 31.9434 26.1006 39.1504 C18.8926 39.1504 13.0498 33.3066 13.0498 26.0996 Cf52.1982 13.0508 m52.1982 20.2559 58.04 26.0996 65.249 26.0996 C65.249 18.8926 59.4063 13.0508 52.1982 13.0508 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.05098 0.12549 0.501961 0 k 0.05098 0.12549 0.501961 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 26.0996 m46.3564 26.0996 52.1982 20.2559 52.1982 13.0508 C44.9912 13.0508 39.1494 18.8926 39.1494 26.0996 Cf65.249 26.0996 m58.04 26.0996 52.1982 31.9434 52.1982 39.1504 C59.4063 39.1504 65.249 33.3066 65.249 26.0996 Cf%AI6_EndPatternLayer) &(0 O 0 R 0.047059 0.086275 0.34902 0 k 0.047059 0.086275 0.34902 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR39.1494 26.0996 m46.3564 26.0996 52.1982 31.9434 52.1982 39.1504 C44.9912 39.1504 39.1494 33.3066 39.1494 26.0996 Cf78.2988 13.0508 m78.2988 20.2559 84.1406 26.0996 91.3486 26.0996 C91.3486 18.8926 85.5059 13.0508 78.2988 13.0508 Cf65.249 26.0996 m72.4561 26.0996 78.2988 20.2559 78.2988 13.0508 C71.0898 13.0508 65.249 18.8926 65.249 26.0996 Cf91.3486 26.0996 m84.1406 26.0996 78.2988 31.9434 78.2988 39.1504 C85.5059 39.1504 91.3486 33.3066 91.3486 26.0996 Cf65.249 26.0996 m72.4561 26.0996 78.2988 31.9434 78.2988 39.1504 C71.0898 39.1504 65.249 33.3066 65.249 26.0996 Cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au1 Ap0 O0 0 0 0 k0 J 0 j 1 w 4 M []0 d0 XR447.2832 285.3359 m447.2832 281.9297 444.4961 279.1416 441.0889 279.1416 c400.9092 279.1416 l397.502 279.1416 394.7148 281.9297 394.7148 285.3359 c394.7148 307.8584 l394.7148 311.2651 397.502 314.0527 400.9092 314.0527 c441.0889 314.0527 l444.4961 314.0527 447.2832 311.2651 447.2832 307.8584 c447.2832 285.3359 lfu0 Ap1 0.65 0 0.1 k414.6309 290.1777 m416.8125 302.9844 l420.3047 302.9844 l418.1191 290.1777 l414.6309 290.1777 l414.6309 290.1777 lf430.7813 302.6689 m430.0898 302.9287 429.0059 303.207 427.6523 303.207 c424.2031 303.207 421.7734 301.4702 421.752 298.9805 c421.7324 297.1406 423.4863 296.1133 424.8105 295.501 c426.1699 294.873 426.627 294.4727 426.6211 293.9121 c426.6113 293.0537 425.5352 292.6621 424.5313 292.6621 c423.1348 292.6621 422.3926 292.8555 421.2461 293.334 c420.7969 293.5371 l420.3066 290.6699 l421.1211 290.3125 422.6289 290.0029 424.1953 289.9873 c427.8652 289.9873 430.2461 291.7041 430.2734 294.3633 c430.2871 295.8193 429.3574 296.9277 427.3438 297.8423 c426.123 298.4351 425.375 298.8301 425.3828 299.4302 c425.3828 299.9624 426.0156 300.5317 427.3828 300.5317 c428.5234 300.5498 429.3516 300.3008 429.9941 300.041 c430.3086 299.8931 l430.7813 302.6689 l430.7813 302.6689 lf*u1 D439.7324 302.9722 m437.0352 302.9722 l436.1992 302.9722 435.5742 302.7441 435.207 301.9102 c430.0234 290.1729 l433.6895 290.1729 l434.2871 291.751 434.4238 292.0977 v434.8242 292.0977 438.3848 292.0918 438.8945 292.0918 c438.998 291.6436 439.3184 290.1729 y442.5586 290.1729 l439.7324 302.9722 l439.7324 302.9722 lf0 D435.4277 294.7168 m435.7168 295.4551 436.8184 298.2974 y436.7988 298.2632 437.1055 299.0391 437.2813 299.52 c437.5176 298.4155 l438.1855 295.3584 438.3262 294.7168 v435.4277 294.7168 l435.4277 294.7168 lf*U411.7031 302.9751 m408.2852 294.2412 l407.9199 296.0156 l407.2852 298.0625 405.3027 300.2793 403.0859 301.3887 c406.2109 290.1875 l409.9043 290.1924 l415.4004 302.9751 l411.7031 302.9751 l411.7031 302.9751 lf0 0.4 1 0 k405.1152 302.9829 m399.4844 302.9829 l399.4414 302.7168 l403.8203 301.6563 406.7188 299.0942 407.9199 296.0156 c406.6973 301.9019 l406.4863 302.7129 405.873 302.9546 405.1152 302.9829 c405.1152 302.9829 lfUULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF